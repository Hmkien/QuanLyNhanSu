// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyNhanLuc.Data;

#nullable disable

namespace QuanLyNhanLuc.Migrations
{
    [DbContext(typeof(QLNLContext))]
    [Migration("20250401132112_AddNhanSuAndPhongBan")]
    partial class AddNhanSuAndPhongBan
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasDiscriminator().HasValue("IdentityRole");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.ChamCong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("GioRa")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("GioVao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayChamCong")
                        .HasColumnType("TEXT");

                    b.Property<int>("NhanSuId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NhanSuId");

                    b.ToTable("ChamCongs");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.ChucVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ChucVus");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("MoTa")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.DiemDanh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("GhiChu")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("GioDen")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("GioVe")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayDiemDanh")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("NhanVienId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrangThai")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NhanVienId");

                    b.ToTable("DiemDanhs");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.LichLamThem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("GioBatDau")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("GioKetThuc")
                        .HasColumnType("TEXT");

                    b.Property<string>("LyDo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NgayLamThem")
                        .HasColumnType("TEXT");

                    b.Property<string>("NguoiDuyet")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NhanSuId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NhanSuId");

                    b.ToTable("LichLamThems");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.MenuQuanTri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActionName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Area")
                        .HasColumnType("TEXT");

                    b.Property<string>("ControllerName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("DuongDan")
                        .HasColumnType("TEXT");

                    b.Property<string>("IconClass")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentMenuId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenMenu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ViTri")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentMenuId");

                    b.ToTable("MenuQuanTris");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.NguoiDung", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("isSuperAdmin")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.NhanSu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PhongBanId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PhongBanId");

                    b.ToTable("NhanSus");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.NhiemVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HanHoanThanh")
                        .HasColumnType("TEXT");

                    b.Property<string>("MoTa")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("NhanVienId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenNhiemVu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TrangThai")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NhanVienId");

                    b.ToTable("NhiemVus");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.PhongBan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaPhongBan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PhongBans");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.ThongTinNguoiDung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ChucVuId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GioiTinhStxt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("NhanSuType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NhanSuTypeStxt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChucVuId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ThongTinNguoiDungs");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.VaiTroMenu", b =>
                {
                    b.Property<string>("VaiTroId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("TEXT");

                    b.HasKey("VaiTroId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("VaiTroMenus");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.VaiTro", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.HasDiscriminator().HasValue("VaiTro");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QuanLyNhanLuc.Models.Entities.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QuanLyNhanLuc.Models.Entities.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyNhanLuc.Models.Entities.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QuanLyNhanLuc.Models.Entities.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.ChamCong", b =>
                {
                    b.HasOne("QuanLyNhanLuc.Models.Entities.NhanSu", "NhanSu")
                        .WithMany("ChamCongs")
                        .HasForeignKey("NhanSuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanSu");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.DiemDanh", b =>
                {
                    b.HasOne("QuanLyNhanLuc.Models.Entities.ThongTinNguoiDung", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.LichLamThem", b =>
                {
                    b.HasOne("QuanLyNhanLuc.Models.Entities.NhanSu", "NhanSu")
                        .WithMany("LichLamThems")
                        .HasForeignKey("NhanSuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanSu");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.MenuQuanTri", b =>
                {
                    b.HasOne("QuanLyNhanLuc.Models.Entities.MenuQuanTri", "ParentMenu")
                        .WithMany("SubMenus")
                        .HasForeignKey("ParentMenuId");

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.NhanSu", b =>
                {
                    b.HasOne("QuanLyNhanLuc.Models.Entities.PhongBan", "PhongBan")
                        .WithMany("NhanSus")
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.NhiemVu", b =>
                {
                    b.HasOne("QuanLyNhanLuc.Models.Entities.ThongTinNguoiDung", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.ThongTinNguoiDung", b =>
                {
                    b.HasOne("QuanLyNhanLuc.Models.Entities.ChucVu", "ChucVu")
                        .WithMany("NhanSus")
                        .HasForeignKey("ChucVuId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("QuanLyNhanLuc.Models.Entities.Department", "Department")
                        .WithMany("NhanSus")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("QuanLyNhanLuc.Models.Entities.NguoiDung", "User")
                        .WithOne("ThongTinNguoiDung")
                        .HasForeignKey("QuanLyNhanLuc.Models.Entities.ThongTinNguoiDung", "UserId");

                    b.Navigation("ChucVu");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.VaiTroMenu", b =>
                {
                    b.HasOne("QuanLyNhanLuc.Models.Entities.MenuQuanTri", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyNhanLuc.Models.Entities.VaiTro", "VaiTro")
                        .WithMany()
                        .HasForeignKey("VaiTroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.ChucVu", b =>
                {
                    b.Navigation("NhanSus");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.Department", b =>
                {
                    b.Navigation("NhanSus");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.MenuQuanTri", b =>
                {
                    b.Navigation("SubMenus");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.NguoiDung", b =>
                {
                    b.Navigation("ThongTinNguoiDung");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.NhanSu", b =>
                {
                    b.Navigation("ChamCongs");

                    b.Navigation("LichLamThems");
                });

            modelBuilder.Entity("QuanLyNhanLuc.Models.Entities.PhongBan", b =>
                {
                    b.Navigation("NhanSus");
                });
#pragma warning restore 612, 618
        }
    }
}
